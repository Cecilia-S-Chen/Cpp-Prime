#include <iostream>
using namespace std;

/*
 * 非动态内存：
 *  数组的长度是预先定义好的，在整个程序中固定不变。
 *
 * 动态内存：
 * 1、使用动态内存的意义：
 *  （1）编译时无法确定数据大小：但是在实际的编程中，往往会出现所需的内存空间大小取决于实际要处理的数据多少，而实际要处理的数据数量在编程时无法确定的情况。
 *  （2）避免内存浪费：如果总是定义一个尽可能大的数组，又会造成空间浪费。
 *
 *  2、动态内存定义：
 *  使得程序可以在运行期间，根据实际需要，要求操作系统临时分配一片内存空间用于存放数据。
 *  此种内存分配是在程序运行中进行的，而不是在编译时就确定的，因此称为“动态内存分配”。
 *
 *  3、动态内存开辟：
 *  （1）T *p = new T;
 *       通过 new 运算符来实现动态内存分配。会动态分配出一片大小为 sizeof(T) 字节的内存空间，并且将该内存空间的起始地址赋值给 p
 *  （2）T *p =new T[N];
 *       用来动态分配一个任意大小的数组。
 *       T 是任意类型名，p 是类型为 T* 的指针，N 代表“元素个数”。
 *       这样的语句动态分配出 N × sizeof(T) 个字节的内存空间，这片空间的起始地址被赋值给 p。
 *
 *  4、动态内存的销毁：
 *      程序从操作系统动态分配所得的内存空间在使用完后应该释放，交还操作系统，以便操作系统将这片内存空间分配给其他程序使用。
 *  （1）delete p:释放动态内存
 *  （2）delete []p：释放动态数组
 *
 *  ！！！！！！动态内存的销毁可能出现的问题！！！！！！！
 *  1、动态内存没有被完全销毁：造成内存泄漏
 *  2、动态内存被重复销毁
 */


