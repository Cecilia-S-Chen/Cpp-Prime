#include <iostream>
using namespace std;

/*
 * 析构函数：
 * 1、作用：释放资源，销毁非static数据成员
 * 2、结构 无返回值+～类名+（无入参）
 * 3、特点，不能overload（不接受入参），一个类只有一个析构函数
 * 4、构造函数和析构函数对比：
 *  *构造函数：
 *      （1）先执行初始化列表，再执行函数体
 *      （2）并按照类成员顺序初始化
 *      （3）初始化列表是显示的
 *  *析构函数：
 *      （1）先执行函数体，再执行析构部分（函数体不属于析构阶段！！！）
 *      （2）并按照类成员逆序进行析构
 *      （3）析构部分是隐式的，与初始化列表不同
 *      （3）内置类型没有析构函数，销毁内置类型什么也不需要做(不需要抹去内存上的数据，只需要将内存交还给操作系统，等待下次分配使用)
 *
 * 5、什么时候调用析构函数；
 * （1）变量在离开作用域时
 * （2）当一个对象被销毁时，调用析构函数销毁其成员
 * （3）容器（标准库容器/数组）被销毁时，调用析构函数销毁其元素
 * （4）临时对象，创建它的完整表达式结束时
 * （5）动态分配对象，对指向它的指针应用delete销毁时
 *
 * 合成析构函数体的两种用途：
 * 1、禁止该类型对象被销毁
 * 2、啥也不做
 *
 * ！！！！！！！！！！！重点！！！！！！！！！！！！！
 * 1、析构函数体在成员销毁之前执行，不执行成员销毁操作！！！
 * 2、成员销毁在析构函数体执行后的隐含析构阶段中被销毁！！！！
 *
 * 内置类型：
 * 1、没有定义的构造函数，只有合成默认构造函数，在初始化时不会赋初值
 * 2、没有析构函数，在析构时不会抹去内存上的数据，只会把内存控制权交还给操作系统
 */


